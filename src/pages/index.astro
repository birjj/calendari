---
import { getProviderUrls, AUTH_PROVIDERS as providers } from "@server/auth";
import Layout from "../layouts/RootLayout.astro";
import { Icon } from "astro-icon/components";
import PageHeader from "@components/PageHeader.astro";
import LoginDropdown from "@components/LoginDropdown.vue";
import CalendariGraph from "@components/index/CalendariGraph.astro";

const simplifiedProviders = providers.map((provider) => {
  return {
    name: provider.name,
    icon: provider.icon,
    url: getProviderUrls(provider.name).begin,
  };
});
---

<Layout title="">
  <PageHeader>Welcome to <emph>Calendari</emph></PageHeader>
  <p>
    <emph>Calendari</emph> is an API for synchronizing calendars from various sources
    that don't provide a calendar interface of their own.
  </p>
  <p>
    It works by allowing you to send simple HTTP requests to add, modify and
    delete events to calendars. These calendars can then be exported to all
    commonly available calendar providers.
  </p>
  <CalendariGraph />
  <p>
    It is assumed that you have some programmatic experience, as you will need
    to send the events yourself using our HTTP API.
  </p>
  <p>
    To get started, log in using one of the below providers.<br />
    {
      import.meta.env["CALENDARI_AUTH_WHITELIST"]
        ? "If your account is whitelisted, an account will be automatically generated for you."
        : "If you don't already have an account, one will be automatically generated for you."
    }
  </p>
  <ul role="list" class="provider-list">
    {
      providers.map((provider) => (
        <li class="provider">
          <a href={getProviderUrls(provider.name).begin}>
            <Icon name={provider.icon} size={32} />
            Log in using {provider.name}
          </a>
        </li>
      ))
    }
  </ul>
</Layout>

<style>
  emph {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 300%;
    background-position: 0%;
    font-weight: bold;
  }
  p {
    font-size: 18px;
    margin-top: 0;
    margin-bottom: 1rem;
  }
  .instructions {
    margin-top: 4rem;
    padding: 1.5rem;
    border-radius: 8px;
    text-align: center;
  }
  .provider-list {
    display: grid;
    grid-template-columns: auto-fit;
    gap: 2rem;
    padding: 0;
    max-width: fit-content;
    margin: 2rem auto;
  }
  .provider {
    list-style: none;
    display: flex;
    padding: 1px;
    background-color: #23262d;
    background-image: none;
    background-size: 400%;
    border-radius: 7px;
    background-position: 100%;
    transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    box-shadow: inset 0 0 0 1px oklch(100% 0.014 267.05 / 20%);
  }
  .provider:is(:hover, :focus-within) {
    background-position: 0;
    background-image: var(--accent-gradient);
  }
  .provider > a {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    width: 100%;
    text-decoration: none;
    line-height: 1.4;
    padding: calc(1rem - 1px) calc(2rem - 1px);
    border-radius: 8px;
    color: white;
    background-color: oklch(27% 0.015 267 / 80%);
  }
  .provider > a > svg:first-child {
    margin-right: 2ch;
  }
</style>
